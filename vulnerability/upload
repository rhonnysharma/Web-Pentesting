Internal Path Disclosure
----------------------------------------------------------
Steps To Reproduce:

Go to cs.money and sign in through steam account.
Now click on chat support icon
Now try to upload file while uploading capture the request in burp and send it to the repeater.
Edit the request as shown in below.
Content-Disposition: form-data; name="file"; filename="/../../../../../.html"
Content-Type: image text/html
Content-Type: text/html
"5. After editing forward the request and observe the response.
"6. Response is 500 Internal Server Error with these two path in the response.

Supporting Material/References:
Image █████ shows edited part of the request.
Image █████ shows the response.
Image ███████ shows response in the browser.

Impact
This issue is not a major threat to security, but this information usually contains sensitive information.
------------------------------------------------------------------------------------------------------
Pixel Flood Attack leads to Application level DoS
-------------------------------------------------------------------------------------------------
I had gone through your policy and I saw that DoS is out of scope but I am not sure about Application level DoS. The another reason to report this attack because it affects real customers who want to chat with your support team. I had tested this with two accounts
From Account 1 I had tried to send 64K * 64K resolution image
Simultaneously from Account 2 I had tried to send normal image (with different Internet Connection).
The response was 502 for both images.

Steps To Reproduce:
- Go to cs.money and login with Account1, Login Account2 on different device with different Internet Connection.
- Now Find Support symbol.
- Click on attachments and upload "lottapixel.jpg" from Account1.
- Simultaneously upload normal image from Account2.

Supporting Material/References:
https://hackerone.com/reports/752073
https://hackerone.com/reports/752010
If you need more information please let me know.
[attachment / reference] From: Device 1, Account1 Image "lottapixel.jpg" is Payload Image "502.PNG" is proof of attack is successful.
From: Device 2, Account2
Image "upload timing from account2.png" and "Account2.png" is proof that real users are also affected.

Impact
Real User are not able to send images to the support team. It affects to the availability of resource. I had recorded 1.2 min downtime.
----------------------------------------------------------------------------------------------------
BUG XSS IN "ADD IMAGES"
--------------------------------------------------------------------------
I want to report bug XSS in "ADD IMAGES"

How To Produce it :
Login to your Account
Then Add Images With XSS Payload In filename (example : "><img src=x onerror=prompt(document.domain)>.png)
Click on Image that you upload
in the name of picture XSS will fired

Impact
https://www.owasp.org/index.php/Cross-site_Scripting_(XSS)
----------------------------------------------------------------------------------------




