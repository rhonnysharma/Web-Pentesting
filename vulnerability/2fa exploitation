Previously created sessions continue being valid after MFA activation

I found one issue related to your 2FA system on https://cs.money/security/

Steps To Reproduce:
- access the same account on https://cs.money/ in two devices
- on device 'A' go to https://cs.money/security/ > complete all steps to activate the 2FA system
- Now the 2FA is activated for this account
- back to device 'B' reload the page
The session still active

Impact
In this scenario when 2FA is activated the other sessions of the account are not invalidated.
2FA is required to login. I believe the expected and recommended behavior here is to terminate the other sessions> request a new login> request the 2FA code> so then give the account access again
----------------------------------------------------------------------------------------
Information disclosure -> 2fa bypass -> POST exploitation

Steps to reproduction :
first login into algolia.com and then
Go to "https://www.algolia.com/account/support"
There will be 2 buttons : "Revoke" and "Renew", click on "Renew" and intercept that request using proxy like burp suite
Now send that request to repeater and forward that request
In repeater, replay the request and check response and look for "gauth_secret" and then copy the value of that key
download google authenticator app and then paste it , then it will show the codes
Now u can execute actions as you know the 2fa codes now!

Impact
Since there are checks implemented for every critical action , i think the leakage of "gauth_secret" here let attacker bypass those checks by knowing 2fa
So now the attacker can delete account, update email and do much more critical actions and totally compromise victims account

Solution : Don't leak the gauth_secret in response
https://hackerone.com/reports/1276373
-----------------------------------------------------------------------------------------------
The authentication code when activating 2FA can be used again to log in
---------------------------------------------------------------
Steps:
1, Go to: https://accounts.shopify.com/accounts/36430415/security and log in
2, Activate 2FA by sms for the account and save the code sent in your phone
3, Log out and perform login again
4, After entering the password and being asked to enter the verification code, you only need to replay the code used to activate the previous 2FA.
5, Logged in successfully.

Impact
Assuming the hacker knows the authentication code when activating the victim's 2FA, he can reuse the victim's code to replay and 
log in successfully without the victim knowing.

Recommend:
Each authentication code should only be used once.
-----------------------------------------------------------
Able to upload backgrounds before entering 2FA
-----------------------------------------------------
Hi Team,
I am able to see and use uploaded backgrounds and able to upload new ones without proper authentication of 2FA. I hope you remember this report #993786.

Steps To Reproduce:
- Login with a steam account and enable 2FA.
- Now logout your account. Clear all the cookies.
- Now again login into your account now don't enter the 2FA code.
- Go to the 3d.cs.money
- If you are a Prime subscriber you are able to upload the custom backgrounds by pressing the "ctrl+v" combination. 
- If you have already uploaded some backgrounds you are able to see those too.


Impact
Able to access subdomain without proper authentication.
It should be accessible after the proper authentication.

-------------------------------------------------------------------------------------
NO RATE LIMIT ON 2FA CAN LEAD TO ACCOUNT COMPROMISE!

Create account on vault.bitwarden.com if you don't have. 2.Setup 2FA via email 3.Logout and log in again. 
This time along with password you have to fill the 2fa code which is sent to the email. 4.Type Any Random number, 
intercept request with burp then send to intruder, mark the code position and start bruteforcing

Results:
Invalid Code Response = 400
Valid Code Response = 200

Impact
2FA acts as extra security. Even if the attacker has user credentials 2FA always protects them from accessing the user data and compromise their whole account.
If the 2FA can be bruteforced it can lead to account compromise assuming that attacker already knows email and password!
---------------------------------------------------------------------------
Account takeover w/o interaction for a user that doesn't have 2fa enabled via 2fa linking and improper auth at /api/2fa/verify
----------------------------------------------------------------------------------------------------------
Hello, team! I found 2 vulnerabilities in your 2FA implementation:
1) There is a possibility to link 2FA to any other account if it wasn't set up before and user ID is known on the request /api/2fa. 
In order to do this, after performing a request for 2FA linking, 
substitute the ID to the victim's ID, organization could be any.

Steps to reproduce:

As a user1, register at https://console.helium.com, skip 2FA, copy the ID.
Register an account user2, register at https://console.helium.com, perform a 2FA request but with ID from user1. 2FA is enabled now on the account user1!
Perform a request /api/2fa/verify with valid code and ID of user1.
Result: You've successfully achieved an account takeover. In the future, you'll be able to log in again with this technique in the future, but a victim will have trouble logging in because of 2FA.

Impact
If a victim's account ID is known, we can fully takeover an account without user interaction. 
User ID could be disclosed at https://console.helium.com/users (if our user role has access to this directory) or by using other techniques.
----------------------------------------------------------------------------------------------------------------------------
2FA bypass by sending blank code
--------------------------------------------------------------------------------------

Steps To Reproduce:
(Add details for how we can reproduce the issue)
Login to Glassdoor and navigate to https://www.glassdoor.com/member/account/securitySettings_input.htm
Enable 2FA
Logout
Login again and notice OTP is asked
Now using Burp suite intercept the POST request by sending incorrect code. [Do not forward]
Before forwarding the request to server, remove the code and forward
Turnoff Intercept and notice that your login request has been fulfilled

Impact
2FA Protection bypass. Attacker could gain access despite the 2FA protection by victim
--------------------------------------------------------------------------------------
Description :

I able to add 2FA to my account without verifying my email

Attack scenario :
Attacker sign up with victim email (Email verification will be sent to victim email).
Attacker able to login without verifying email.
Attacker add 2FA.

Impact
the victim can't register an account with victim email. If the victim reset the password, the password will change, but the victim can't login because 2FA.
-----------------------------------------------------------------------------------------------
Password not checked when disabling 2FA
-----------------------------------------------------------------------------------
Hi,
when I was submitted a report to a program that request 2FA ON, I notice that if you try to disable this option will ask for backup code - password and if you enter 
a random password in the request filed and a correct backup code it will be successfully disabled the 2FA without check if the password was correct or not.

PoC
- go to your account and activate the 2FA from /settings/auth
- after active this option click on Disabled icon beside Two-factor authentication.
- a new window will open asking for Authentication or backup code - Password to confirm the disabled.
- in the first box enter a valid Authentication or backup code and in the password filed enter any random/wrong password and click save.
- the option will be disabled successful without check the validation of the password.

Impact
user can disable Two-factor authentication without entering a valid password
------------------------------------------------------------------------------------------















